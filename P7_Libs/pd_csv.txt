{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "initial_id",
   "metadata": {
    "collapsed": true,
    "ExecuteTime": {
     "end_time": "2023-11-18T06:24:32.850388659Z",
     "start_time": "2023-11-18T06:24:32.772290216Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "outputs": [],
   "source": [
    "df = pandas.read_csv('data.csv')"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-11-18T06:24:34.831504704Z",
     "start_time": "2023-11-18T06:24:34.811966130Z"
    }
   },
   "id": "29fed0b77ee3bcc9"
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  first_name last_name         contact\n",
      "0      Arnav       Deo  +91 9820551251\n",
      "1       John       Doe  +91 9898982203\n",
      "2       Mark     Twain  +91 9543411023\n",
      "3       Karl      Marx  +91 9241533902\n"
     ]
    }
   ],
   "source": [
    "print(df)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-11-18T06:24:36.128657511Z",
     "start_time": "2023-11-18T06:24:36.113238700Z"
    }
   },
   "id": "134eb5f422b3ee01"
  },
  {
   "cell_type": "markdown",
   "source": [
    "Reads the data frame as specified in data.csv"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "7162080d5bafb131"
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(4, 3)\n"
     ]
    }
   ],
   "source": [
    "print(df.shape)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-11-18T06:24:39.762321933Z",
     "start_time": "2023-11-18T06:24:39.753703536Z"
    }
   },
   "id": "1d5eecc64050ab76"
  },
  {
   "cell_type": "markdown",
   "source": [
    "The shape of a dataframe is no of rows, no of columns"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "4cf8981c5bc44c37"
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "first_name              John\n",
      "last_name                Doe\n",
      "contact       +91 9898982203\n",
      "Name: 1, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(df.iloc[1])"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-11-18T06:26:26.144029768Z",
     "start_time": "2023-11-18T06:26:26.100846698Z"
    }
   },
   "id": "b4d6311ccca9722a"
  },
  {
   "cell_type": "markdown",
   "source": [
    "The iloc method returns the indexed location. Since no index is defined here (unlike databases where the primary key acts as an index, the returned value is the nth row). For an indexed dataframe, the returned value is index = nth row"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "d51876141bf1ccb3"
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "first_name              Mark\n",
      "last_name              Twain\n",
      "contact       +91 9543411023\n",
      "Name: 2, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(df.loc[2])"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-11-18T06:27:34.645531825Z",
     "start_time": "2023-11-18T06:27:34.637007331Z"
    }
   },
   "id": "3a103361b1911e46"
  },
  {
   "cell_type": "markdown",
   "source": [
    "The loc method returns the row-indexed value, the index of the dataframe is ignored. nth row is returned"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "f436ee3d89378a4b"
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  first_name last_name         contact\n",
      "0      Arnav       Deo  +91 9820551251\n"
     ]
    }
   ],
   "source": [
    "print(df.loc[[0]])"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-11-18T06:29:19.420227027Z",
     "start_time": "2023-11-18T06:29:19.376594444Z"
    }
   },
   "id": "e47ecf6cd68b0a64"
  },
  {
   "cell_type": "markdown",
   "source": [
    "An array as an index to df.loc returns the nth row as a single tabular representation, unlike an object dump"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "50039c696ae0fa1a"
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
